{"version":3,"sources":["getFingerprint.js"],"names":["isCordova","window","PhoneGap","Cordova","cordova","isReactNative","navigator","product","toLowerCase","getFingerprint","uppyFileObj","file","options","tus","defaultOptions","fingerprint","uppyFingerprint","id","endpoint","join","Promise","resolve"],"mappings":";;AAAA;;AAEA,SAASA,SAAT,GAAsB;AACpB,SAAO,OAAOC,MAAP,KAAkB,WAAlB,KACL,OAAOA,MAAM,CAACC,QAAd,KAA2B,WAA3B,IACG,OAAOD,MAAM,CAACE,OAAd,KAA0B,WAD7B,IAEG,OAAOF,MAAM,CAACG,OAAd,KAA0B,WAHxB,CAAP;AAKD;;AAED,SAASC,aAAT,GAA0B;AACxB,SAAO,OAAOC,SAAP,KAAqB,WAArB,IACF,OAAOA,SAAS,CAACC,OAAjB,KAA6B,QAD3B,IAEFD,SAAS,CAACC,OAAV,CAAkBC,WAAlB,OAAoC,aAFzC;AAGD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACe,SAASC,cAAT,CAAyBC,WAAzB,EAAsC;AACnD,SAAO,CAACC,IAAD,EAAOC,OAAP,KAAmB;AACxB,QAAIZ,SAAS,MAAMK,aAAa,EAAhC,EAAoC;AAClC,aAAOQ,GAAG,CAACC,cAAJ,CAAmBC,WAAnB,CAA+BJ,IAA/B,EAAqCC,OAArC,CAAP;AACD;;AAED,UAAMI,eAAe,GAAG,CACtB,KADsB,EAEtBN,WAAW,CAACO,EAFU,EAGtBL,OAAO,CAACM,QAHc,EAItBC,IAJsB,CAIjB,GAJiB,CAAxB;AAMA,WAAOC,OAAO,CAACC,OAAR,CAAgBL,eAAhB,CAAP;AACD,GAZD;AAaD;;iBAduBP,c","sourcesContent":["import * as tus from 'tus-js-client'\n\nfunction isCordova () {\n  return typeof window !== 'undefined' && (\n    typeof window.PhoneGap !== 'undefined'\n    || typeof window.Cordova !== 'undefined'\n    || typeof window.cordova !== 'undefined'\n  )\n}\n\nfunction isReactNative () {\n  return typeof navigator !== 'undefined'\n    && typeof navigator.product === 'string'\n    && navigator.product.toLowerCase() === 'reactnative'\n}\n\n// We override tus fingerprint to uppy’s `file.id`, since the `file.id`\n// now also includes `relativePath` for files added from folders.\n// This means you can add 2 identical files, if one is in folder a,\n// the other in folder b — `a/file.jpg` and `b/file.jpg`, when added\n// together with a folder, will be treated as 2 separate files.\n//\n// For React Native and Cordova, we let tus-js-client’s default\n// fingerprint handling take charge.\nexport default function getFingerprint (uppyFileObj) {\n  return (file, options) => {\n    if (isCordova() || isReactNative()) {\n      return tus.defaultOptions.fingerprint(file, options)\n    }\n\n    const uppyFingerprint = [\n      'tus',\n      uppyFileObj.id,\n      options.endpoint,\n    ].join('-')\n\n    return Promise.resolve(uppyFingerprint)\n  }\n}\n"]}