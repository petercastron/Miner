{"remainingRequest":"/home/tony/work/nas_mydisk/branches/UTG/web/node_modules/thread-loader/dist/cjs.js!/home/tony/work/nas_mydisk/branches/UTG/web/node_modules/babel-loader/lib/index.js!/home/tony/work/nas_mydisk/branches/UTG/web/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/tony/work/nas_mydisk/branches/UTG/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/tony/work/nas_mydisk/branches/UTG/web/src/components/Breadcrumb/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/tony/work/nas_mydisk/branches/UTG/web/src/components/Breadcrumb/index.vue","mtime":1696662095000},{"path":"/home/tony/work/nas_mydisk/branches/UTG/web/babel.config.js","mtime":1696662090000},{"path":"/home/tony/work/nas_mydisk/branches/UTG/web/node_modules/cache-loader/dist/cjs.js","mtime":1696662092000},{"path":"/home/tony/work/nas_mydisk/branches/UTG/web/node_modules/thread-loader/dist/cjs.js","mtime":1696662095000},{"path":"/home/tony/work/nas_mydisk/branches/UTG/web/node_modules/babel-loader/lib/index.js","mtime":1696662091000},{"path":"/home/tony/work/nas_mydisk/branches/UTG/web/node_modules/cache-loader/dist/cjs.js","mtime":1696662092000},{"path":"/home/tony/work/nas_mydisk/branches/UTG/web/node_modules/vue-loader/lib/index.js","mtime":1696662095000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkucHVzaC5qcyI7CmV4cG9ydCBkZWZhdWx0IHsKICBjcmVhdGVkKCkgewogICAgdGhpcy5nZXRCcmVhZGNydW1iKCk7CiAgfSwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgbGV2ZWxMaXN0OiBudWxsLAogICAgICBhcnIyOiBbXSwKICAgICAgcmVzdWx0OiBbXSwKICAgICAgYXJyMTogW10KICAgIH07CiAgfSwKICB3YXRjaDogewogICAgJHJvdXRlKCkgewogICAgICB0aGlzLmdldEJyZWFkY3J1bWIoKTsKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIGdldEJyZWFkY3J1bWIoKSB7CiAgICAgIGxldCBhcnIxID0gdGhpcy4kcm91dGUubWF0Y2hlZC5maWx0ZXIoaXRlbSA9PiBpdGVtLm5hbWUpOwogICAgICAvLyAgY29uc29sZS5sb2coYXJyMSwndGhpcy5hcnIxJykKICAgICAgdGhpcy5hcnIyID0gdGhpcy5hcnIyLmNvbmNhdChhcnIxKTsKICAgICAgdmFyIHJlc3VsdCA9IFtdOwogICAgICB2YXIgb2JqID0ge307CiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5hcnIyLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgaWYgKCFvYmpbdGhpcy5hcnIyW2ldLm1ldGEudGl0bGVdKSB7CiAgICAgICAgICByZXN1bHQucHVzaCh0aGlzLmFycjJbaV0pOwogICAgICAgICAgb2JqW3RoaXMuYXJyMltpXS5tZXRhLnRpdGxlXSA9IHRydWU7CiAgICAgICAgfQogICAgICB9CgogICAgICAvL3JldHVybiBfYXJyOwogICAgICAvLyBjb25zdCBmaXJzdCA9IF9hcnJbMF0KICAgICAgLy8gaWYgKGZpcnN0ICYmIGZpcnN0Lm5hbWUgIT09ICdob21lJykgewogICAgICAvLyAgIF9hcnIgPSBbeyBwYXRoOiAnL2hvbWUnLCBtZXRhOiB7IHRpdGxlOiAn6aaW6aG1JyB9fV0uY29uY2F0KF9hcnIpIAogICAgICAvLyB9CiAgICAgIHRoaXMubGV2ZWxMaXN0ID0gcmVzdWx0OwogICAgfSwKICAgIHRha2IocGF0aCkgewogICAgICAvLyBjb25zb2xlLmxvZyhwYXRoLCdwYXRoJykKICAgICAgdGhpcy4kcm91dGVyLnB1c2goewogICAgICAgIHBhdGg6IHBhdGgKICAgICAgfSk7CiAgICB9LAogICAgZGVsZXRlcyhpbmRleCkgewogICAgICB0aGlzLmxldmVsTGlzdC5zcGxpY2UoaW5kZXgsIDEpOwogICAgICB0aGlzLmxpc3R1cGRhdGUodGhpcy5sZXZlbExpc3QpOwoKICAgICAgLy8gIGNvbnNvbGUubG9nKGluZGV4LCdpbmRleCcpCiAgICB9LAoKICAgIGxpc3R1cGRhdGUobGV2ZWxMaXN0KSB7CiAgICAgIGNvbnNvbGUubG9nKGxldmVsTGlzdCwgJ2xldmVsTGlzdCcpOwogICAgICB0aGlzLmFycjIgPSBsZXZlbExpc3Q7CiAgICAgIGxldCByZXN1bHQgPSBbXTsKICAgICAgdmFyIG9iaiA9IHt9OwogICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMuYXJyMi5sZW5ndGg7IGkrKykgewogICAgICAgIGlmICghb2JqW3RoaXMuYXJyMltpXS5tZXRhLnRpdGxlXSkgewogICAgICAgICAgcmVzdWx0LnB1c2godGhpcy5hcnIyW2ldKTsKICAgICAgICAgIG9ialt0aGlzLmFycjJbaV0ubWV0YS50aXRsZV0gPSB0cnVlOwogICAgICAgIH0KICAgICAgfQogICAgICB0aGlzLmxldmVsTGlzdCA9IHJlc3VsdDsKICAgIH0KICB9Cn07"},{"version":3,"mappings":";AAiCA;EACAA;IACA;EACA;EACAC;IACA;MACAC;MACAC;MACAC;MACAC;IACA;EACA;EACAC;IACAC;MACA;IACA;EACA;EACAC;IACAC;MACA;MACA;MACA;MACA;MACA;MACA;QACA;UACAL;UACAM;QACA;MACA;;MAEA;MACA;MACA;MACA;MACA;MACA;IACA;IACAC;MACA;MACA;QAAAC;MAAA;IACA;IACAC;MACA;MACA;;MAEA;IACA;;IACAC;MACAC;MACA;MACA;MACA;MACA;QACA;UACAX;UACAM;QACA;MACA;MACA;IACA;EACA;AACA","names":["created","data","levelList","arr2","result","arr1","watch","$route","methods","getBreadcrumb","obj","takb","path","deletes","listupdate","console"],"sourceRoot":"src/components/Breadcrumb","sources":["index.vue"],"sourcesContent":["<template>\n  <el-breadcrumb class=\"app-breadcrumb\" separator=\"/\">\n    <!-- <transition-group name=\"breadcrumb\">\n      <el-breadcrumb-item style=\"border:1px solid red;margin-left:10px\" v-for=\"(item, index) in levelList\" :key=\"item.path\">\n        <span\n          v-if=\"item.redirect === 'noredirect' || index == levelList.length - 1\"\n          class=\"no-redirect\"\n          >{{ item.meta.title }}</span\n        >\n        <router-link v-else :to=\"item.path\">{{\n          item.meta.title\n        }}</router-link>\n      </el-breadcrumb-item>\n    </transition-group> -->\n    <span v-for=\"(item, index) in levelList\" :key=\"item.path\" >\n    <span class=\"span\"  @click=\"takb(item.path)\">{{ item.meta.title}} </span>\n     <span class=\"span1\" @click=\"deletes(index)\"><img src=\"http://wisdomlife.oss-cn-beijing.aliyuncs.com/mall/images/1619080052590.png\" alt=\"\"></span>\n    </span>\n    \n  </el-breadcrumb>\n   \n      <!-- <el-breadcrumb-item v-for=\"(item, index) in levelList\" :key=\"item.path\">\n        <span\n          v-if=\"item.redirect === 'noredirect' || index == levelList.length - 1\"\n          class=\"no-redirect\"\n          >{{ item.meta.title }}</span\n        >\n        <router-link v-else :to=\"item.redirect || item.path\">{{\n          item.meta.title\n        }}</router-link>\n      </el-breadcrumb-item> -->\n</template>\n<script>\nexport default {\n  created() {\n    this.getBreadcrumb();\n  },\n  data() {\n    return {\n      levelList: null,\n      arr2:[],\n      result:[],\n      arr1:[]\n    };\n  },\n  watch: {\n    $route() {\n      this.getBreadcrumb();\n    },\n  },\n  methods: {\n    getBreadcrumb() {\n      let arr1 = this.$route.matched.filter((item) => item.name);\n      //  console.log(arr1,'this.arr1')\n     this.arr2=this.arr2.concat(arr1)\n     var result = [];\n            var obj = {};\n            for(var i =0; i<this.arr2.length; i++){\n                if(!obj[this.arr2[i].meta.title]){\n                    result.push(this.arr2[i]);\n                    obj[this.arr2[i].meta.title] = true;\n                }\n            }\n   \n      //return _arr;\n      // const first = _arr[0]\n      // if (first && first.name !== 'home') {\n      //   _arr = [{ path: '/home', meta: { title: '首页' }}].concat(_arr) \n      // }\n      this.levelList = result;\n    },\n    takb(path){\n    // console.log(path,'path')\n    this.$router.push({path: path})\n    },\n    deletes(index){\n     this.levelList.splice(index ,1)\n     this.listupdate(this.levelList)\n    \n    //  console.log(index,'index')\n    },\n    listupdate(levelList){\n     console.log(levelList,'levelList')\n    this.arr2=levelList\n      let result = [];\n            var obj = {};\n            for(var i =0; i<this.arr2.length; i++){\n                if(!obj[this.arr2[i].meta.title]){\n                    result.push(this.arr2[i]);\n                    obj[this.arr2[i].meta.title] = true;\n                }\n            }\n       this.levelList = result;      \n    }\n  }\n}\n</script>\n\n<style rel=\"stylesheet/scss\" lang=\"scss\" scoped>\n.app-breadcrumb.el-breadcrumb {\n  width: 95%;\n height: 40px;\n overflow: hidden;\n  // border: 1px solid red;\n  display: inline-block;\n  font-size: 14px;\n  line-height: 50px;\n  margin-left: 10px;\n  .no-redirect {\n    color: #97a8be;\n    cursor: text;\n  }\n}\n.span{\nmargin-left: 10px;\npadding: 10px;\nbackground: rgb(64, 158, 255);\ncolor: #fff;\nborder-radius: 3px;\n}\n.span1{\n background: rgb(64, 158, 255);\n padding: 10px;\n}\n.span1 img{\n  width: 10px;\n  height: 12px;\n}\n </style>\n"]}]}