{"remainingRequest":"F:\\viteFiles\\teston\\node_modules\\thread-loader\\dist\\cjs.js!F:\\viteFiles\\teston\\node_modules\\babel-loader\\lib\\index.js!F:\\viteFiles\\teston\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!F:\\viteFiles\\teston\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\viteFiles\\teston\\src\\views\\layout\\components\\Navbar.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\viteFiles\\teston\\src\\views\\layout\\components\\Navbar.vue","mtime":1619054162000},{"path":"F:\\viteFiles\\teston\\babel.config.js","mtime":1623402045953},{"path":"F:\\viteFiles\\teston\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1617866813583},{"path":"F:\\viteFiles\\teston\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1617866813355},{"path":"F:\\viteFiles\\teston\\node_modules\\babel-loader\\lib\\index.js","mtime":1668408460122},{"path":"F:\\viteFiles\\teston\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1617866813583},{"path":"F:\\viteFiles\\teston\\node_modules\\vue-loader\\lib\\index.js","mtime":1668759735037}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgbWFwR2V0dGVycyB9IGZyb20gJ3Z1ZXgnOwppbXBvcnQgQnJlYWRjcnVtYiBmcm9tICdAL2NvbXBvbmVudHMvQnJlYWRjcnVtYic7CmltcG9ydCBIYW1idXJnZXIgZnJvbSAnQC9jb21wb25lbnRzL0hhbWJ1cmdlcic7CmV4cG9ydCBkZWZhdWx0IHsKICBjb21wb25lbnRzOiB7CiAgICBCcmVhZGNydW1iLAogICAgSGFtYnVyZ2VyCiAgfSwKICBjb21wdXRlZDogewogICAgLi4ubWFwR2V0dGVycyhbJ3NpZGViYXInLCAnYXZhdGFyJ10pCiAgfSwKICBtZXRob2RzOiB7CiAgICB0b2dnbGVTaWRlQmFyKCkgewogICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCgnVG9nZ2xlU2lkZUJhcicpOwogICAgfSwKICAgIGxvZ291dCgpIHsKICAgICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ0xvZ091dCcpLnRoZW4oKCkgPT4gewogICAgICAgIGxvY2F0aW9uLnJlbG9hZCgpOyAvLyDkuLrkuobph43mlrDlrp7kvovljJZ2dWUtcm91dGVy5a+56LGhIOmBv+WFjWJ1ZwogICAgICB9KTsKICAgIH0KICB9Cn07"},{"version":3,"mappings":"AAwBA;AACA;AACA;AAEA;EACAA;IACAC;IACAC;EACA;EACAC;IACA,eACA,WACA,SACA;EACA;EACAC;IACAC;MACA;IACA;IACAC;MACA;QACAC;MACA;IACA;EACA;AACA","names":["components","Breadcrumb","Hamburger","computed","methods","toggleSideBar","logout","location"],"sourceRoot":"src/views/layout/components","sources":["Navbar.vue"],"sourcesContent":["<template>\r\n  <el-menu class=\"navbar\" mode=\"horizontal\">\r\n    <hamburger class=\"hamburger-container\" :toggleClick=\"toggleSideBar\" :isActive=\"sidebar.opened\"></hamburger>\r\n    <breadcrumb></breadcrumb>\r\n    <el-dropdown class=\"avatar-container\" trigger=\"click\">\r\n      <div class=\"avatar-wrapper\">\r\n        <img class=\"user-avatar\" :src=\"avatar\">\r\n        <i class=\"el-icon-caret-bottom\"></i>\r\n      </div>\r\n      <el-dropdown-menu class=\"user-dropdown\" slot=\"dropdown\">\r\n        <router-link class=\"inlineBlock\" to=\"/\">\r\n          <el-dropdown-item>\r\n            首页\r\n          </el-dropdown-item>\r\n        </router-link>\r\n        <el-dropdown-item divided>\r\n          <span @click=\"logout\" style=\"display:block;\">退出</span>\r\n        </el-dropdown-item>\r\n      </el-dropdown-menu>\r\n    </el-dropdown>\r\n  </el-menu>\r\n</template>\r\n\r\n<script>\r\nimport { mapGetters } from 'vuex'\r\nimport Breadcrumb from '@/components/Breadcrumb'\r\nimport Hamburger from '@/components/Hamburger'\r\n\r\nexport default {\r\n  components: {\r\n    Breadcrumb,\r\n    Hamburger\r\n  },\r\n  computed: {\r\n    ...mapGetters([\r\n      'sidebar',\r\n      'avatar'\r\n    ])\r\n  },\r\n  methods: {\r\n    toggleSideBar() {\r\n      this.$store.dispatch('ToggleSideBar')\r\n    },\r\n    logout() {\r\n      this.$store.dispatch('LogOut').then(() => {\r\n        location.reload() // 为了重新实例化vue-router对象 避免bug\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style rel=\"stylesheet/scss\" lang=\"scss\" scoped>\r\n.navbar {\r\n  height: 50px;\r\n  line-height: 50px;\r\n  border-radius: 0px !important;\r\n  .hamburger-container {\r\n    line-height: 58px;\r\n    height: 50px;\r\n    float: left;\r\n    padding: 0 10px;\r\n  }\r\n  .screenfull {\r\n    position: absolute;\r\n    right: 90px;\r\n    top: 16px;\r\n    color: red;\r\n  }\r\n  .avatar-container {\r\n    height: 50px;\r\n    display: inline-block;\r\n    position: absolute;\r\n    right: 35px;\r\n    .avatar-wrapper {\r\n      cursor: pointer;\r\n      margin-top: 5px;\r\n      position: relative;\r\n      .user-avatar {\r\n        width: 40px;\r\n        height: 40px;\r\n        border-radius: 10px;\r\n      }\r\n      .el-icon-caret-bottom {\r\n        position: absolute;\r\n        right: -20px;\r\n        top: 25px;\r\n        font-size: 12px;\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>\r\n\r\n"]}]}