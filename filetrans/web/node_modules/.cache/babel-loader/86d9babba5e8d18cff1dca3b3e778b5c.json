{"remainingRequest":"D:\\fileRun\\node_modules\\babel-loader\\lib\\index.js!D:\\fileRun\\src\\utils\\qwebchannel.js","dependencies":[{"path":"D:\\fileRun\\src\\utils\\qwebchannel.js","mtime":1663138031537},{"path":"D:\\fileRun\\babel.config.js","mtime":1623402045953},{"path":"D:\\fileRun\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1617866813583},{"path":"D:\\fileRun\\node_modules\\babel-loader\\lib\\index.js","mtime":1668408460122}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCioqDQoqKiBDb3B5cmlnaHQgKEMpIDIwMTYgVGhlIFF0IENvbXBhbnkgTHRkLg0KKiogQ29weXJpZ2h0IChDKSAyMDE2IEtsYXLDpGx2ZGFsZW5zIERhdGFrb25zdWx0IEFCLCBhIEtEQUIgR3JvdXAgY29tcGFueSwgaW5mb0BrZGFiLmNvbSwgYXV0aG9yIE1pbGlhbiBXb2xmZiA8bWlsaWFuLndvbGZmQGtkYWIuY29tPg0KKiogQ29udGFjdDogaHR0cHM6Ly93d3cucXQuaW8vbGljZW5zaW5nLw0KKioNCioqIFRoaXMgZmlsZSBpcyBwYXJ0IG9mIHRoZSBRdFdlYkNoYW5uZWwgbW9kdWxlIG9mIHRoZSBRdCBUb29sa2l0Lg0KKioNCioqICRRVF9CRUdJTl9MSUNFTlNFOkxHUEwkDQoqKiBDb21tZXJjaWFsIExpY2Vuc2UgVXNhZ2UNCioqIExpY2Vuc2VlcyBob2xkaW5nIHZhbGlkIGNvbW1lcmNpYWwgUXQgbGljZW5zZXMgbWF5IHVzZSB0aGlzIGZpbGUgaW4NCioqIGFjY29yZGFuY2Ugd2l0aCB0aGUgY29tbWVyY2lhbCBsaWNlbnNlIGFncmVlbWVudCBwcm92aWRlZCB3aXRoIHRoZQ0KKiogU29mdHdhcmUgb3IsIGFsdGVybmF0aXZlbHksIGluIGFjY29yZGFuY2Ugd2l0aCB0aGUgdGVybXMgY29udGFpbmVkIGluDQoqKiBhIHdyaXR0ZW4gYWdyZWVtZW50IGJldHdlZW4geW91IGFuZCBUaGUgUXQgQ29tcGFueS4gRm9yIGxpY2Vuc2luZyB0ZXJtcw0KKiogYW5kIGNvbmRpdGlvbnMgc2VlIGh0dHBzOi8vd3d3LnF0LmlvL3Rlcm1zLWNvbmRpdGlvbnMuIEZvciBmdXJ0aGVyDQoqKiBpbmZvcm1hdGlvbiB1c2UgdGhlIGNvbnRhY3QgZm9ybSBhdCBodHRwczovL3d3dy5xdC5pby9jb250YWN0LXVzLg0KKioNCioqIEdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBVc2FnZQ0KKiogQWx0ZXJuYXRpdmVseSwgdGhpcyBmaWxlIG1heSBiZSB1c2VkIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIExlc3Nlcg0KKiogR2VuZXJhbCBQdWJsaWMgTGljZW5zZSB2ZXJzaW9uIDMgYXMgcHVibGlzaGVkIGJ5IHRoZSBGcmVlIFNvZnR3YXJlDQoqKiBGb3VuZGF0aW9uIGFuZCBhcHBlYXJpbmcgaW4gdGhlIGZpbGUgTElDRU5TRS5MR1BMMyBpbmNsdWRlZCBpbiB0aGUNCioqIHBhY2thZ2luZyBvZiB0aGlzIGZpbGUuIFBsZWFzZSByZXZpZXcgdGhlIGZvbGxvd2luZyBpbmZvcm1hdGlvbiB0bw0KKiogZW5zdXJlIHRoZSBHTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgdmVyc2lvbiAzIHJlcXVpcmVtZW50cw0KKiogd2lsbCBiZSBtZXQ6IGh0dHBzOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvbGdwbC0zLjAuaHRtbC4NCioqDQoqKiBHTlUgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBVc2FnZQ0KKiogQWx0ZXJuYXRpdmVseSwgdGhpcyBmaWxlIG1heSBiZSB1c2VkIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VDQoqKiBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIHZlcnNpb24gMi4wIG9yIChhdCB5b3VyIG9wdGlvbikgdGhlIEdOVSBHZW5lcmFsDQoqKiBQdWJsaWMgbGljZW5zZSB2ZXJzaW9uIDMgb3IgYW55IGxhdGVyIHZlcnNpb24gYXBwcm92ZWQgYnkgdGhlIEtERSBGcmVlDQoqKiBRdCBGb3VuZGF0aW9uLiBUaGUgbGljZW5zZXMgYXJlIGFzIHB1Ymxpc2hlZCBieSB0aGUgRnJlZSBTb2Z0d2FyZQ0KKiogRm91bmRhdGlvbiBhbmQgYXBwZWFyaW5nIGluIHRoZSBmaWxlIExJQ0VOU0UuR1BMMiBhbmQgTElDRU5TRS5HUEwzDQoqKiBpbmNsdWRlZCBpbiB0aGUgcGFja2FnaW5nIG9mIHRoaXMgZmlsZS4gUGxlYXNlIHJldmlldyB0aGUgZm9sbG93aW5nDQoqKiBpbmZvcm1hdGlvbiB0byBlbnN1cmUgdGhlIEdOVSBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIHJlcXVpcmVtZW50cyB3aWxsDQoqKiBiZSBtZXQ6IGh0dHBzOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvZ3BsLTIuMC5odG1sIGFuZA0KKiogaHR0cHM6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy9ncGwtMy4wLmh0bWwuDQoqKg0KKiogJFFUX0VORF9MSUNFTlNFJA0KKioNCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCgoidXNlIHN0cmljdCI7CgppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5wdXNoLmpzIjsKdmFyIFFXZWJDaGFubmVsTWVzc2FnZVR5cGVzID0gewogIHNpZ25hbDogMSwKICBwcm9wZXJ0eVVwZGF0ZTogMiwKICBpbml0OiAzLAogIGlkbGU6IDQsCiAgZGVidWc6IDUsCiAgaW52b2tlTWV0aG9kOiA2LAogIGNvbm5lY3RUb1NpZ25hbDogNywKICBkaXNjb25uZWN0RnJvbVNpZ25hbDogOCwKICBzZXRQcm9wZXJ0eTogOSwKICByZXNwb25zZTogMTAKfTsKdmFyIFFXZWJDaGFubmVsID0gZnVuY3Rpb24gKHRyYW5zcG9ydCwgaW5pdENhbGxiYWNrKSB7CiAgaWYgKHR5cGVvZiB0cmFuc3BvcnQgIT09ICJvYmplY3QiIHx8IHR5cGVvZiB0cmFuc3BvcnQuc2VuZCAhPT0gImZ1bmN0aW9uIikgewogICAgY29uc29sZS5lcnJvcigiVGhlIFFXZWJDaGFubmVsIGV4cGVjdHMgYSB0cmFuc3BvcnQgb2JqZWN0IHdpdGggYSBzZW5kIGZ1bmN0aW9uIGFuZCBvbm1lc3NhZ2UgY2FsbGJhY2sgcHJvcGVydHkuIiArICIgR2l2ZW4gaXM6IHRyYW5zcG9ydDogIiArIHR5cGVvZiB0cmFuc3BvcnQgKyAiLCB0cmFuc3BvcnQuc2VuZDogIiArIHR5cGVvZiB0cmFuc3BvcnQuc2VuZCk7CiAgICByZXR1cm47CiAgfQogIHZhciBjaGFubmVsID0gdGhpczsKICB0aGlzLnRyYW5zcG9ydCA9IHRyYW5zcG9ydDsKICB0aGlzLnNlbmQgPSBmdW5jdGlvbiAoZGF0YSkgewogICAgaWYgKHR5cGVvZiBkYXRhICE9PSAic3RyaW5nIikgewogICAgICBkYXRhID0gSlNPTi5zdHJpbmdpZnkoZGF0YSk7CiAgICB9CiAgICBjaGFubmVsLnRyYW5zcG9ydC5zZW5kKGRhdGEpOwogIH07CiAgdGhpcy50cmFuc3BvcnQub25tZXNzYWdlID0gZnVuY3Rpb24gKG1lc3NhZ2UpIHsKICAgIHZhciBkYXRhID0gbWVzc2FnZS5kYXRhOwogICAgaWYgKHR5cGVvZiBkYXRhID09PSAic3RyaW5nIikgewogICAgICBkYXRhID0gSlNPTi5wYXJzZShkYXRhKTsKICAgIH0KICAgIHN3aXRjaCAoZGF0YS50eXBlKSB7CiAgICAgIGNhc2UgUVdlYkNoYW5uZWxNZXNzYWdlVHlwZXMuc2lnbmFsOgogICAgICAgIGNoYW5uZWwuaGFuZGxlU2lnbmFsKGRhdGEpOwogICAgICAgIGJyZWFrOwogICAgICBjYXNlIFFXZWJDaGFubmVsTWVzc2FnZVR5cGVzLnJlc3BvbnNlOgogICAgICAgIGNoYW5uZWwuaGFuZGxlUmVzcG9uc2UoZGF0YSk7CiAgICAgICAgYnJlYWs7CiAgICAgIGNhc2UgUVdlYkNoYW5uZWxNZXNzYWdlVHlwZXMucHJvcGVydHlVcGRhdGU6CiAgICAgICAgY2hhbm5lbC5oYW5kbGVQcm9wZXJ0eVVwZGF0ZShkYXRhKTsKICAgICAgICBicmVhazsKICAgICAgZGVmYXVsdDoKICAgICAgICBjb25zb2xlLmVycm9yKCJpbnZhbGlkIG1lc3NhZ2UgcmVjZWl2ZWQ6IiwgbWVzc2FnZS5kYXRhKTsKICAgICAgICBicmVhazsKICAgIH0KICB9OwogIHRoaXMuZXhlY0NhbGxiYWNrcyA9IHt9OwogIHRoaXMuZXhlY0lkID0gMDsKICB0aGlzLmV4ZWMgPSBmdW5jdGlvbiAoZGF0YSwgY2FsbGJhY2spIHsKICAgIGlmICghY2FsbGJhY2spIHsKICAgICAgLy8gaWYgbm8gY2FsbGJhY2sgaXMgZ2l2ZW4sIHNlbmQgZGlyZWN0bHkKICAgICAgY2hhbm5lbC5zZW5kKGRhdGEpOwogICAgICByZXR1cm47CiAgICB9CiAgICBpZiAoY2hhbm5lbC5leGVjSWQgPT09IE51bWJlci5NQVhfVkFMVUUpIHsKICAgICAgLy8gd3JhcAogICAgICBjaGFubmVsLmV4ZWNJZCA9IE51bWJlci5NSU5fVkFMVUU7CiAgICB9CiAgICBpZiAoZGF0YS5oYXNPd25Qcm9wZXJ0eSgiaWQiKSkgewogICAgICBjb25zb2xlLmVycm9yKCJDYW5ub3QgZXhlYyBtZXNzYWdlIHdpdGggcHJvcGVydHkgaWQ6ICIgKyBKU09OLnN0cmluZ2lmeShkYXRhKSk7CiAgICAgIHJldHVybjsKICAgIH0KICAgIGRhdGEuaWQgPSBjaGFubmVsLmV4ZWNJZCsrOwogICAgY2hhbm5lbC5leGVjQ2FsbGJhY2tzW2RhdGEuaWRdID0gY2FsbGJhY2s7CiAgICBjaGFubmVsLnNlbmQoZGF0YSk7CiAgfTsKICB0aGlzLm9iamVjdHMgPSB7fTsKICB0aGlzLmhhbmRsZVNpZ25hbCA9IGZ1bmN0aW9uIChtZXNzYWdlKSB7CiAgICB2YXIgb2JqZWN0ID0gY2hhbm5lbC5vYmplY3RzW21lc3NhZ2Uub2JqZWN0XTsKICAgIGlmIChvYmplY3QpIHsKICAgICAgb2JqZWN0LnNpZ25hbEVtaXR0ZWQobWVzc2FnZS5zaWduYWwsIG1lc3NhZ2UuYXJncyk7CiAgICB9IGVsc2UgewogICAgICBjb25zb2xlLndhcm4oIlVuaGFuZGxlZCBzaWduYWw6ICIgKyBtZXNzYWdlLm9iamVjdCArICI6OiIgKyBtZXNzYWdlLnNpZ25hbCk7CiAgICB9CiAgfTsKICB0aGlzLmhhbmRsZVJlc3BvbnNlID0gZnVuY3Rpb24gKG1lc3NhZ2UpIHsKICAgIGlmICghbWVzc2FnZS5oYXNPd25Qcm9wZXJ0eSgiaWQiKSkgewogICAgICBjb25zb2xlLmVycm9yKCJJbnZhbGlkIHJlc3BvbnNlIG1lc3NhZ2UgcmVjZWl2ZWQ6ICIsIEpTT04uc3RyaW5naWZ5KG1lc3NhZ2UpKTsKICAgICAgcmV0dXJuOwogICAgfQogICAgY2hhbm5lbC5leGVjQ2FsbGJhY2tzW21lc3NhZ2UuaWRdKG1lc3NhZ2UuZGF0YSk7CiAgICBkZWxldGUgY2hhbm5lbC5leGVjQ2FsbGJhY2tzW21lc3NhZ2UuaWRdOwogIH07CiAgdGhpcy5oYW5kbGVQcm9wZXJ0eVVwZGF0ZSA9IGZ1bmN0aW9uIChtZXNzYWdlKSB7CiAgICBtZXNzYWdlLmRhdGEuZm9yRWFjaChkYXRhID0+IHsKICAgICAgdmFyIG9iamVjdCA9IGNoYW5uZWwub2JqZWN0c1tkYXRhLm9iamVjdF07CiAgICAgIGlmIChvYmplY3QpIHsKICAgICAgICBvYmplY3QucHJvcGVydHlVcGRhdGUoZGF0YS5zaWduYWxzLCBkYXRhLnByb3BlcnRpZXMpOwogICAgICB9IGVsc2UgewogICAgICAgIGNvbnNvbGUud2FybigiVW5oYW5kbGVkIHByb3BlcnR5IHVwZGF0ZTogIiArIGRhdGEub2JqZWN0ICsgIjo6IiArIGRhdGEuc2lnbmFsKTsKICAgICAgfQogICAgfSk7CiAgICBjaGFubmVsLmV4ZWMoewogICAgICB0eXBlOiBRV2ViQ2hhbm5lbE1lc3NhZ2VUeXBlcy5pZGxlCiAgICB9KTsKICB9OwogIHRoaXMuZGVidWcgPSBmdW5jdGlvbiAobWVzc2FnZSkgewogICAgY2hhbm5lbC5zZW5kKHsKICAgICAgdHlwZTogUVdlYkNoYW5uZWxNZXNzYWdlVHlwZXMuZGVidWcsCiAgICAgIGRhdGE6IG1lc3NhZ2UKICAgIH0pOwogIH07CiAgY2hhbm5lbC5leGVjKHsKICAgIHR5cGU6IFFXZWJDaGFubmVsTWVzc2FnZVR5cGVzLmluaXQKICB9LCBmdW5jdGlvbiAoZGF0YSkgewogICAgZm9yIChjb25zdCBvYmplY3ROYW1lIG9mIE9iamVjdC5rZXlzKGRhdGEpKSB7CiAgICAgIG5ldyBRT2JqZWN0KG9iamVjdE5hbWUsIGRhdGFbb2JqZWN0TmFtZV0sIGNoYW5uZWwpOwogICAgfQoKICAgIC8vIG5vdyB1bndyYXAgcHJvcGVydGllcywgd2hpY2ggbWlnaHQgcmVmZXJlbmNlIG90aGVyIHJlZ2lzdGVyZWQgb2JqZWN0cwogICAgZm9yIChjb25zdCBvYmplY3ROYW1lIG9mIE9iamVjdC5rZXlzKGNoYW5uZWwub2JqZWN0cykpIHsKICAgICAgY2hhbm5lbC5vYmplY3RzW29iamVjdE5hbWVdLnVud3JhcFByb3BlcnRpZXMoKTsKICAgIH0KICAgIGlmIChpbml0Q2FsbGJhY2spIHsKICAgICAgaW5pdENhbGxiYWNrKGNoYW5uZWwpOwogICAgfQogICAgY2hhbm5lbC5leGVjKHsKICAgICAgdHlwZTogUVdlYkNoYW5uZWxNZXNzYWdlVHlwZXMuaWRsZQogICAgfSk7CiAgfSk7CiAgLy8gICByZXR1cm4gUVdlYkNoYW5uZWwKfTsKCmZ1bmN0aW9uIFFPYmplY3QobmFtZSwgZGF0YSwgd2ViQ2hhbm5lbCkgewogIHRoaXMuX19pZF9fID0gbmFtZTsKICB3ZWJDaGFubmVsLm9iamVjdHNbbmFtZV0gPSB0aGlzOwoKICAvLyBMaXN0IG9mIGNhbGxiYWNrcyB0aGF0IGdldCBpbnZva2VkIHVwb24gc2lnbmFsIGVtaXNzaW9uCiAgdGhpcy5fX29iamVjdFNpZ25hbHNfXyA9IHt9OwoKICAvLyBDYWNoZSBvZiBhbGwgcHJvcGVydGllcywgdXBkYXRlZCB3aGVuIGEgbm90aWZ5IHNpZ25hbCBpcyBlbWl0dGVkCiAgdGhpcy5fX3Byb3BlcnR5Q2FjaGVfXyA9IHt9OwogIHZhciBvYmplY3QgPSB0aGlzOwoKICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCgogIHRoaXMudW53cmFwUU9iamVjdCA9IGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgaWYgKHJlc3BvbnNlIGluc3RhbmNlb2YgQXJyYXkpIHsKICAgICAgLy8gc3VwcG9ydCBsaXN0IG9mIG9iamVjdHMKICAgICAgcmV0dXJuIHJlc3BvbnNlLm1hcChxb2JqID0+IG9iamVjdC51bndyYXBRT2JqZWN0KHFvYmopKTsKICAgIH0KICAgIGlmICghKHJlc3BvbnNlIGluc3RhbmNlb2YgT2JqZWN0KSkgcmV0dXJuIHJlc3BvbnNlOwogICAgaWYgKCFyZXNwb25zZVsiX19RT2JqZWN0Kl9fIl0gfHwgcmVzcG9uc2UuaWQgPT09IHVuZGVmaW5lZCkgewogICAgICB2YXIgak9iaiA9IHt9OwogICAgICBmb3IgKGNvbnN0IHByb3BOYW1lIG9mIE9iamVjdC5rZXlzKHJlc3BvbnNlKSkgewogICAgICAgIGpPYmpbcHJvcE5hbWVdID0gb2JqZWN0LnVud3JhcFFPYmplY3QocmVzcG9uc2VbcHJvcE5hbWVdKTsKICAgICAgfQogICAgICByZXR1cm4gak9iajsKICAgIH0KICAgIHZhciBvYmplY3RJZCA9IHJlc3BvbnNlLmlkOwogICAgaWYgKHdlYkNoYW5uZWwub2JqZWN0c1tvYmplY3RJZF0pIHJldHVybiB3ZWJDaGFubmVsLm9iamVjdHNbb2JqZWN0SWRdOwogICAgaWYgKCFyZXNwb25zZS5kYXRhKSB7CiAgICAgIGNvbnNvbGUuZXJyb3IoIkNhbm5vdCB1bndyYXAgdW5rbm93biBRT2JqZWN0ICIgKyBvYmplY3RJZCArICIgd2l0aG91dCBkYXRhLiIpOwogICAgICByZXR1cm47CiAgICB9CiAgICB2YXIgcU9iamVjdCA9IG5ldyBRT2JqZWN0KG9iamVjdElkLCByZXNwb25zZS5kYXRhLCB3ZWJDaGFubmVsKTsKICAgIHFPYmplY3QuZGVzdHJveWVkLmNvbm5lY3QoZnVuY3Rpb24gKCkgewogICAgICBpZiAod2ViQ2hhbm5lbC5vYmplY3RzW29iamVjdElkXSA9PT0gcU9iamVjdCkgewogICAgICAgIGRlbGV0ZSB3ZWJDaGFubmVsLm9iamVjdHNbb2JqZWN0SWRdOwogICAgICAgIC8vIHJlc2V0IHRoZSBub3cgZGVsZXRlZCBRT2JqZWN0IHRvIGFuIGVtcHR5IHt9IG9iamVjdAogICAgICAgIC8vIGp1c3QgYXNzaWduaW5nIHt9IHRob3VnaCB3b3VsZCBub3QgaGF2ZSB0aGUgZGVzaXJlZCBlZmZlY3QsIGJ1dCB0aGUKICAgICAgICAvLyBiZWxvdyBhbHNvIGVuc3VyZXMgYWxsIGV4dGVybmFsIHJlZmVyZW5jZXMgd2lsbCBzZWUgdGhlIGVtcHR5IG1hcAogICAgICAgIC8vIE5PVEU6IHRoaXMgZGV0b3VyIGlzIG5lY2Vzc2FyeSB0byB3b3JrYXJvdW5kIFFUQlVHLTQwMDIxCiAgICAgICAgT2JqZWN0LmtleXMocU9iamVjdCkuZm9yRWFjaChuYW1lID0+IGRlbGV0ZSBxT2JqZWN0W25hbWVdKTsKICAgICAgfQogICAgfSk7CiAgICAvLyBoZXJlIHdlIGFyZSBhbHJlYWR5IGluaXRpYWxpemVkLCBhbmQgdGh1cyBtdXN0IGRpcmVjdGx5IHVud3JhcCB0aGUgcHJvcGVydGllcwogICAgcU9iamVjdC51bndyYXBQcm9wZXJ0aWVzKCk7CiAgICByZXR1cm4gcU9iamVjdDsKICB9OwogIHRoaXMudW53cmFwUHJvcGVydGllcyA9IGZ1bmN0aW9uICgpIHsKICAgIGZvciAoY29uc3QgcHJvcGVydHlJZHggb2YgT2JqZWN0LmtleXMob2JqZWN0Ll9fcHJvcGVydHlDYWNoZV9fKSkgewogICAgICBvYmplY3QuX19wcm9wZXJ0eUNhY2hlX19bcHJvcGVydHlJZHhdID0gb2JqZWN0LnVud3JhcFFPYmplY3Qob2JqZWN0Ll9fcHJvcGVydHlDYWNoZV9fW3Byb3BlcnR5SWR4XSk7CiAgICB9CiAgfTsKICBmdW5jdGlvbiBhZGRTaWduYWwoc2lnbmFsRGF0YSwgaXNQcm9wZXJ0eU5vdGlmeVNpZ25hbCkgewogICAgdmFyIHNpZ25hbE5hbWUgPSBzaWduYWxEYXRhWzBdOwogICAgdmFyIHNpZ25hbEluZGV4ID0gc2lnbmFsRGF0YVsxXTsKICAgIG9iamVjdFtzaWduYWxOYW1lXSA9IHsKICAgICAgY29ubmVjdDogZnVuY3Rpb24gKGNhbGxiYWNrKSB7CiAgICAgICAgaWYgKHR5cGVvZiBjYWxsYmFjayAhPT0gImZ1bmN0aW9uIikgewogICAgICAgICAgY29uc29sZS5lcnJvcigiQmFkIGNhbGxiYWNrIGdpdmVuIHRvIGNvbm5lY3QgdG8gc2lnbmFsICIgKyBzaWduYWxOYW1lKTsKICAgICAgICAgIHJldHVybjsKICAgICAgICB9CiAgICAgICAgb2JqZWN0Ll9fb2JqZWN0U2lnbmFsc19fW3NpZ25hbEluZGV4XSA9IG9iamVjdC5fX29iamVjdFNpZ25hbHNfX1tzaWduYWxJbmRleF0gfHwgW107CiAgICAgICAgb2JqZWN0Ll9fb2JqZWN0U2lnbmFsc19fW3NpZ25hbEluZGV4XS5wdXNoKGNhbGxiYWNrKTsKCiAgICAgICAgLy8gb25seSByZXF1aXJlZCBmb3IgInB1cmUiIHNpZ25hbHMsIGhhbmRsZWQgc2VwYXJhdGVseSBmb3IgcHJvcGVydGllcyBpbiBwcm9wZXJ0eVVwZGF0ZQogICAgICAgIGlmIChpc1Byb3BlcnR5Tm90aWZ5U2lnbmFsKSByZXR1cm47CgogICAgICAgIC8vIGFsc28gbm90ZSB0aGF0IHdlIGFsd2F5cyBnZXQgbm90aWZpZWQgYWJvdXQgdGhlIGRlc3Ryb3llZCBzaWduYWwKICAgICAgICBpZiAoc2lnbmFsTmFtZSA9PT0gImRlc3Ryb3llZCIgfHwgc2lnbmFsTmFtZSA9PT0gImRlc3Ryb3llZCgpIiB8fCBzaWduYWxOYW1lID09PSAiZGVzdHJveWVkKFFPYmplY3QqKSIpIHJldHVybjsKCiAgICAgICAgLy8gYW5kIG90aGVyd2lzZSB3ZSBvbmx5IG5lZWQgdG8gYmUgY29ubmVjdGVkIG9ubHkgb25jZQogICAgICAgIGlmIChvYmplY3QuX19vYmplY3RTaWduYWxzX19bc2lnbmFsSW5kZXhdLmxlbmd0aCA9PSAxKSB7CiAgICAgICAgICB3ZWJDaGFubmVsLmV4ZWMoewogICAgICAgICAgICB0eXBlOiBRV2ViQ2hhbm5lbE1lc3NhZ2VUeXBlcy5jb25uZWN0VG9TaWduYWwsCiAgICAgICAgICAgIG9iamVjdDogb2JqZWN0Ll9faWRfXywKICAgICAgICAgICAgc2lnbmFsOiBzaWduYWxJbmRleAogICAgICAgICAgfSk7CiAgICAgICAgfQogICAgICB9LAogICAgICBkaXNjb25uZWN0OiBmdW5jdGlvbiAoY2FsbGJhY2spIHsKICAgICAgICBpZiAodHlwZW9mIGNhbGxiYWNrICE9PSAiZnVuY3Rpb24iKSB7CiAgICAgICAgICBjb25zb2xlLmVycm9yKCJCYWQgY2FsbGJhY2sgZ2l2ZW4gdG8gZGlzY29ubmVjdCBmcm9tIHNpZ25hbCAiICsgc2lnbmFsTmFtZSk7CiAgICAgICAgICByZXR1cm47CiAgICAgICAgfQogICAgICAgIG9iamVjdC5fX29iamVjdFNpZ25hbHNfX1tzaWduYWxJbmRleF0gPSBvYmplY3QuX19vYmplY3RTaWduYWxzX19bc2lnbmFsSW5kZXhdIHx8IFtdOwogICAgICAgIHZhciBpZHggPSBvYmplY3QuX19vYmplY3RTaWduYWxzX19bc2lnbmFsSW5kZXhdLmluZGV4T2YoY2FsbGJhY2spOwogICAgICAgIGlmIChpZHggPT09IC0xKSB7CiAgICAgICAgICBjb25zb2xlLmVycm9yKCJDYW5ub3QgZmluZCBjb25uZWN0aW9uIG9mIHNpZ25hbCAiICsgc2lnbmFsTmFtZSArICIgdG8gIiArIGNhbGxiYWNrLm5hbWUpOwogICAgICAgICAgcmV0dXJuOwogICAgICAgIH0KICAgICAgICBvYmplY3QuX19vYmplY3RTaWduYWxzX19bc2lnbmFsSW5kZXhdLnNwbGljZShpZHgsIDEpOwogICAgICAgIGlmICghaXNQcm9wZXJ0eU5vdGlmeVNpZ25hbCAmJiBvYmplY3QuX19vYmplY3RTaWduYWxzX19bc2lnbmFsSW5kZXhdLmxlbmd0aCA9PT0gMCkgewogICAgICAgICAgLy8gb25seSByZXF1aXJlZCBmb3IgInB1cmUiIHNpZ25hbHMsIGhhbmRsZWQgc2VwYXJhdGVseSBmb3IgcHJvcGVydGllcyBpbiBwcm9wZXJ0eVVwZGF0ZQogICAgICAgICAgd2ViQ2hhbm5lbC5leGVjKHsKICAgICAgICAgICAgdHlwZTogUVdlYkNoYW5uZWxNZXNzYWdlVHlwZXMuZGlzY29ubmVjdEZyb21TaWduYWwsCiAgICAgICAgICAgIG9iamVjdDogb2JqZWN0Ll9faWRfXywKICAgICAgICAgICAgc2lnbmFsOiBzaWduYWxJbmRleAogICAgICAgICAgfSk7CiAgICAgICAgfQogICAgICB9CiAgICB9OwogIH0KCiAgLyoqDQogICAqIEludm9rZXMgYWxsIGNhbGxiYWNrcyBmb3IgdGhlIGdpdmVuIHNpZ25hbG5hbWUuIEFsc28gd29ya3MgZm9yIHByb3BlcnR5IG5vdGlmeSBjYWxsYmFja3MuDQogICAqLwogIGZ1bmN0aW9uIGludm9rZVNpZ25hbENhbGxiYWNrcyhzaWduYWxOYW1lLCBzaWduYWxBcmdzKSB7CiAgICB2YXIgY29ubmVjdGlvbnMgPSBvYmplY3QuX19vYmplY3RTaWduYWxzX19bc2lnbmFsTmFtZV07CiAgICBpZiAoY29ubmVjdGlvbnMpIHsKICAgICAgY29ubmVjdGlvbnMuZm9yRWFjaChmdW5jdGlvbiAoY2FsbGJhY2spIHsKICAgICAgICBjYWxsYmFjay5hcHBseShjYWxsYmFjaywgc2lnbmFsQXJncyk7CiAgICAgIH0pOwogICAgfQogIH0KICB0aGlzLnByb3BlcnR5VXBkYXRlID0gZnVuY3Rpb24gKHNpZ25hbHMsIHByb3BlcnR5TWFwKSB7CiAgICAvLyB1cGRhdGUgcHJvcGVydHkgY2FjaGUKICAgIGZvciAoY29uc3QgcHJvcGVydHlJbmRleCBvZiBPYmplY3Qua2V5cyhwcm9wZXJ0eU1hcCkpIHsKICAgICAgdmFyIHByb3BlcnR5VmFsdWUgPSBwcm9wZXJ0eU1hcFtwcm9wZXJ0eUluZGV4XTsKICAgICAgb2JqZWN0Ll9fcHJvcGVydHlDYWNoZV9fW3Byb3BlcnR5SW5kZXhdID0gdGhpcy51bndyYXBRT2JqZWN0KHByb3BlcnR5VmFsdWUpOwogICAgfQogICAgZm9yIChjb25zdCBzaWduYWxOYW1lIG9mIE9iamVjdC5rZXlzKHNpZ25hbHMpKSB7CiAgICAgIC8vIEludm9rZSBhbGwgY2FsbGJhY2tzLCBhcyBzaWduYWxFbWl0dGVkKCkgZG9lcyBub3QuIFRoaXMgZW5zdXJlcyB0aGUKICAgICAgLy8gcHJvcGVydHkgY2FjaGUgaXMgdXBkYXRlZCBiZWZvcmUgdGhlIGNhbGxiYWNrcyBhcmUgaW52b2tlZC4KICAgICAgaW52b2tlU2lnbmFsQ2FsbGJhY2tzKHNpZ25hbE5hbWUsIHNpZ25hbHNbc2lnbmFsTmFtZV0pOwogICAgfQogIH07CiAgdGhpcy5zaWduYWxFbWl0dGVkID0gZnVuY3Rpb24gKHNpZ25hbE5hbWUsIHNpZ25hbEFyZ3MpIHsKICAgIGludm9rZVNpZ25hbENhbGxiYWNrcyhzaWduYWxOYW1lLCB0aGlzLnVud3JhcFFPYmplY3Qoc2lnbmFsQXJncykpOwogIH07CiAgZnVuY3Rpb24gYWRkTWV0aG9kKG1ldGhvZERhdGEpIHsKICAgIHZhciBtZXRob2ROYW1lID0gbWV0aG9kRGF0YVswXTsKICAgIHZhciBtZXRob2RJZHggPSBtZXRob2REYXRhWzFdOwoKICAgIC8vIEZ1bGx5IHNwZWNpZmllZCBtZXRob2RzIGFyZSBpbnZva2VkIGJ5IGlkLCBvdGhlcnMgYnkgbmFtZSBmb3IgaG9zdC1zaWRlIG92ZXJsb2FkIHJlc29sdXRpb24KICAgIHZhciBpbnZva2VkTWV0aG9kID0gbWV0aG9kTmFtZVttZXRob2ROYW1lLmxlbmd0aCAtIDFdID09PSAnKScgPyBtZXRob2RJZHggOiBtZXRob2ROYW1lOwogICAgb2JqZWN0W21ldGhvZE5hbWVdID0gZnVuY3Rpb24gKCkgewogICAgICB2YXIgYXJncyA9IFtdOwogICAgICB2YXIgY2FsbGJhY2s7CiAgICAgIHZhciBlcnJDYWxsYmFjazsKICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyArK2kpIHsKICAgICAgICB2YXIgYXJndW1lbnQgPSBhcmd1bWVudHNbaV07CiAgICAgICAgaWYgKHR5cGVvZiBhcmd1bWVudCA9PT0gImZ1bmN0aW9uIikgY2FsbGJhY2sgPSBhcmd1bWVudDtlbHNlIGlmIChhcmd1bWVudCBpbnN0YW5jZW9mIFFPYmplY3QgJiYgd2ViQ2hhbm5lbC5vYmplY3RzW2FyZ3VtZW50Ll9faWRfX10gIT09IHVuZGVmaW5lZCkgYXJncy5wdXNoKHsKICAgICAgICAgICJpZCI6IGFyZ3VtZW50Ll9faWRfXwogICAgICAgIH0pO2Vsc2UgYXJncy5wdXNoKGFyZ3VtZW50KTsKICAgICAgfQogICAgICB2YXIgcmVzdWx0OwogICAgICAvLyBkdXJpbmcgdGVzdCwgd2ViQ2hhbm5lbC5leGVjIHN5bmNocm9ub3VzbHkgY2FsbHMgdGhlIGNhbGxiYWNrCiAgICAgIC8vIHRoZXJlZm9yZSwgdGhlIHByb21pc2UgbXVzdCBiZSBjb25zdHVjdGVkIGJlZm9yZSBjYWxsaW5nCiAgICAgIC8vIHdlYkNoYW5uZWwuZXhlYyB0byBlbnN1cmUgdGhlIGNhbGxiYWNrIGlzIHNldCB1cAogICAgICBpZiAoIWNhbGxiYWNrICYmIHR5cGVvZiBQcm9taXNlID09PSAnZnVuY3Rpb24nKSB7CiAgICAgICAgcmVzdWx0ID0gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkgewogICAgICAgICAgY2FsbGJhY2sgPSByZXNvbHZlOwogICAgICAgICAgZXJyQ2FsbGJhY2sgPSByZWplY3Q7CiAgICAgICAgfSk7CiAgICAgIH0KICAgICAgd2ViQ2hhbm5lbC5leGVjKHsKICAgICAgICAidHlwZSI6IFFXZWJDaGFubmVsTWVzc2FnZVR5cGVzLmludm9rZU1ldGhvZCwKICAgICAgICAib2JqZWN0Ijogb2JqZWN0Ll9faWRfXywKICAgICAgICAibWV0aG9kIjogaW52b2tlZE1ldGhvZCwKICAgICAgICAiYXJncyI6IGFyZ3MKICAgICAgfSwgZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgaWYgKHJlc3BvbnNlICE9PSB1bmRlZmluZWQpIHsKICAgICAgICAgIHZhciByZXN1bHQgPSBvYmplY3QudW53cmFwUU9iamVjdChyZXNwb25zZSk7CiAgICAgICAgICBpZiAoY2FsbGJhY2spIHsKICAgICAgICAgICAgY2FsbGJhY2socmVzdWx0KTsKICAgICAgICAgIH0KICAgICAgICB9IGVsc2UgaWYgKGVyckNhbGxiYWNrKSB7CiAgICAgICAgICBlcnJDYWxsYmFjaygpOwogICAgICAgIH0KICAgICAgfSk7CiAgICAgIHJldHVybiByZXN1bHQ7CiAgICB9OwogIH0KICBmdW5jdGlvbiBiaW5kR2V0dGVyU2V0dGVyKHByb3BlcnR5SW5mbykgewogICAgdmFyIHByb3BlcnR5SW5kZXggPSBwcm9wZXJ0eUluZm9bMF07CiAgICB2YXIgcHJvcGVydHlOYW1lID0gcHJvcGVydHlJbmZvWzFdOwogICAgdmFyIG5vdGlmeVNpZ25hbERhdGEgPSBwcm9wZXJ0eUluZm9bMl07CiAgICAvLyBpbml0aWFsaXplIHByb3BlcnR5IGNhY2hlIHdpdGggY3VycmVudCB2YWx1ZQogICAgLy8gTk9URTogaWYgdGhpcyBpcyBhbiBvYmplY3QsIGl0IGlzIG5vdCBkaXJlY3RseSB1bndyYXBwZWQgYXMgaXQgbWlnaHQKICAgIC8vIHJlZmVyZW5jZSBvdGhlciBRT2JqZWN0IHRoYXQgd2UgZG8gbm90IGtub3cgeWV0CiAgICBvYmplY3QuX19wcm9wZXJ0eUNhY2hlX19bcHJvcGVydHlJbmRleF0gPSBwcm9wZXJ0eUluZm9bM107CiAgICBpZiAobm90aWZ5U2lnbmFsRGF0YSkgewogICAgICBpZiAobm90aWZ5U2lnbmFsRGF0YVswXSA9PT0gMSkgewogICAgICAgIC8vIHNpZ25hbCBuYW1lIGlzIG9wdGltaXplZCBhd2F5LCByZWNvbnN0cnVjdCB0aGUgYWN0dWFsIG5hbWUKICAgICAgICBub3RpZnlTaWduYWxEYXRhWzBdID0gcHJvcGVydHlOYW1lICsgIkNoYW5nZWQiOwogICAgICB9CiAgICAgIGFkZFNpZ25hbChub3RpZnlTaWduYWxEYXRhLCB0cnVlKTsKICAgIH0KICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvYmplY3QsIHByb3BlcnR5TmFtZSwgewogICAgICBjb25maWd1cmFibGU6IHRydWUsCiAgICAgIGdldDogZnVuY3Rpb24gKCkgewogICAgICAgIHZhciBwcm9wZXJ0eVZhbHVlID0gb2JqZWN0Ll9fcHJvcGVydHlDYWNoZV9fW3Byb3BlcnR5SW5kZXhdOwogICAgICAgIGlmIChwcm9wZXJ0eVZhbHVlID09PSB1bmRlZmluZWQpIHsKICAgICAgICAgIC8vIFRoaXMgc2hvdWxkbid0IGhhcHBlbgogICAgICAgICAgY29uc29sZS53YXJuKCJVbmRlZmluZWQgdmFsdWUgaW4gcHJvcGVydHkgY2FjaGUgZm9yIHByb3BlcnR5IFwiIiArIHByb3BlcnR5TmFtZSArICJcIiBpbiBvYmplY3QgIiArIG9iamVjdC5fX2lkX18pOwogICAgICAgIH0KICAgICAgICByZXR1cm4gcHJvcGVydHlWYWx1ZTsKICAgICAgfSwKICAgICAgc2V0OiBmdW5jdGlvbiAodmFsdWUpIHsKICAgICAgICBpZiAodmFsdWUgPT09IHVuZGVmaW5lZCkgewogICAgICAgICAgY29uc29sZS53YXJuKCJQcm9wZXJ0eSBzZXR0ZXIgZm9yICIgKyBwcm9wZXJ0eU5hbWUgKyAiIGNhbGxlZCB3aXRoIHVuZGVmaW5lZCB2YWx1ZSEiKTsKICAgICAgICAgIHJldHVybjsKICAgICAgICB9CiAgICAgICAgb2JqZWN0Ll9fcHJvcGVydHlDYWNoZV9fW3Byb3BlcnR5SW5kZXhdID0gdmFsdWU7CiAgICAgICAgdmFyIHZhbHVlVG9TZW5kID0gdmFsdWU7CiAgICAgICAgaWYgKHZhbHVlVG9TZW5kIGluc3RhbmNlb2YgUU9iamVjdCAmJiB3ZWJDaGFubmVsLm9iamVjdHNbdmFsdWVUb1NlbmQuX19pZF9fXSAhPT0gdW5kZWZpbmVkKSB2YWx1ZVRvU2VuZCA9IHsKICAgICAgICAgICJpZCI6IHZhbHVlVG9TZW5kLl9faWRfXwogICAgICAgIH07CiAgICAgICAgd2ViQ2hhbm5lbC5leGVjKHsKICAgICAgICAgICJ0eXBlIjogUVdlYkNoYW5uZWxNZXNzYWdlVHlwZXMuc2V0UHJvcGVydHksCiAgICAgICAgICAib2JqZWN0Ijogb2JqZWN0Ll9faWRfXywKICAgICAgICAgICJwcm9wZXJ0eSI6IHByb3BlcnR5SW5kZXgsCiAgICAgICAgICAidmFsdWUiOiB2YWx1ZVRvU2VuZAogICAgICAgIH0pOwogICAgICB9CiAgICB9KTsKICB9CgogIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KCiAgZGF0YS5tZXRob2RzLmZvckVhY2goYWRkTWV0aG9kKTsKICBkYXRhLnByb3BlcnRpZXMuZm9yRWFjaChiaW5kR2V0dGVyU2V0dGVyKTsKICBkYXRhLnNpZ25hbHMuZm9yRWFjaChmdW5jdGlvbiAoc2lnbmFsKSB7CiAgICBhZGRTaWduYWwoc2lnbmFsLCBmYWxzZSk7CiAgfSk7CiAgT2JqZWN0LmFzc2lnbihvYmplY3QsIGRhdGEuZW51bXMpOwp9CgovLyByZXF1aXJlZCBmb3IgdXNlIHdpdGggbm9kZWpzCi8vIGlmICh0eXBlb2YgbW9kdWxlID09PSAnb2JqZWN0JykgewovLyAgICAgbW9kdWxlLmV4cG9ydHMgPSB7Ci8vICAgICAgICAgUVdlYkNoYW5uZWw6IFFXZWJDaGFubmVsCi8vICAgICB9OwovLyB9CmV4cG9ydCB7IFFXZWJDaGFubmVsIH07"},{"version":3,"names":["QWebChannelMessageTypes","signal","propertyUpdate","init","idle","debug","invokeMethod","connectToSignal","disconnectFromSignal","setProperty","response","QWebChannel","transport","initCallback","send","console","error","channel","data","JSON","stringify","onmessage","message","parse","type","handleSignal","handleResponse","handlePropertyUpdate","execCallbacks","execId","exec","callback","Number","MAX_VALUE","MIN_VALUE","hasOwnProperty","id","objects","object","signalEmitted","args","warn","forEach","signals","properties","objectName","Object","keys","QObject","unwrapProperties","name","webChannel","__id__","__objectSignals__","__propertyCache__","unwrapQObject","Array","map","qobj","undefined","jObj","propName","objectId","qObject","destroyed","connect","propertyIdx","addSignal","signalData","isPropertyNotifySignal","signalName","signalIndex","push","length","disconnect","idx","indexOf","splice","invokeSignalCallbacks","signalArgs","connections","apply","propertyMap","propertyIndex","propertyValue","addMethod","methodData","methodName","methodIdx","invokedMethod","errCallback","i","arguments","argument","result","Promise","resolve","reject","bindGetterSetter","propertyInfo","propertyName","notifySignalData","defineProperty","configurable","get","set","value","valueToSend","methods","assign","enums"],"sources":["D:/fileRun/src/utils/qwebchannel.js"],"sourcesContent":["/****************************************************************************\r\n**\r\n** Copyright (C) 2016 The Qt Company Ltd.\r\n** Copyright (C) 2016 Klarälvdalens Datakonsult AB, a KDAB Group company, info@kdab.com, author Milian Wolff <milian.wolff@kdab.com>\r\n** Contact: https://www.qt.io/licensing/\r\n**\r\n** This file is part of the QtWebChannel module of the Qt Toolkit.\r\n**\r\n** $QT_BEGIN_LICENSE:LGPL$\r\n** Commercial License Usage\r\n** Licensees holding valid commercial Qt licenses may use this file in\r\n** accordance with the commercial license agreement provided with the\r\n** Software or, alternatively, in accordance with the terms contained in\r\n** a written agreement between you and The Qt Company. For licensing terms\r\n** and conditions see https://www.qt.io/terms-conditions. For further\r\n** information use the contact form at https://www.qt.io/contact-us.\r\n**\r\n** GNU Lesser General Public License Usage\r\n** Alternatively, this file may be used under the terms of the GNU Lesser\r\n** General Public License version 3 as published by the Free Software\r\n** Foundation and appearing in the file LICENSE.LGPL3 included in the\r\n** packaging of this file. Please review the following information to\r\n** ensure the GNU Lesser General Public License version 3 requirements\r\n** will be met: https://www.gnu.org/licenses/lgpl-3.0.html.\r\n**\r\n** GNU General Public License Usage\r\n** Alternatively, this file may be used under the terms of the GNU\r\n** General Public License version 2.0 or (at your option) the GNU General\r\n** Public license version 3 or any later version approved by the KDE Free\r\n** Qt Foundation. The licenses are as published by the Free Software\r\n** Foundation and appearing in the file LICENSE.GPL2 and LICENSE.GPL3\r\n** included in the packaging of this file. Please review the following\r\n** information to ensure the GNU General Public License requirements will\r\n** be met: https://www.gnu.org/licenses/gpl-2.0.html and\r\n** https://www.gnu.org/licenses/gpl-3.0.html.\r\n**\r\n** $QT_END_LICENSE$\r\n**\r\n****************************************************************************/\r\n\r\n\"use strict\";\r\n\r\nvar QWebChannelMessageTypes = {\r\n    signal: 1,\r\n    propertyUpdate: 2,\r\n    init: 3,\r\n    idle: 4,\r\n    debug: 5,\r\n    invokeMethod: 6,\r\n    connectToSignal: 7,\r\n    disconnectFromSignal: 8,\r\n    setProperty: 9,\r\n    response: 10,\r\n};\r\n\r\nvar QWebChannel = function(transport, initCallback)\r\n{\r\n    if (typeof transport !== \"object\" || typeof transport.send !== \"function\") {\r\n        console.error(\"The QWebChannel expects a transport object with a send function and onmessage callback property.\" +\r\n                      \" Given is: transport: \" + typeof(transport) + \", transport.send: \" + typeof(transport.send));\r\n        return;\r\n    }\r\n\r\n    var channel = this;\r\n    this.transport = transport;\r\n\r\n    this.send = function(data)\r\n    {\r\n        if (typeof(data) !== \"string\") {\r\n            data = JSON.stringify(data);\r\n        }\r\n        channel.transport.send(data);\r\n    }\r\n\r\n    this.transport.onmessage = function(message)\r\n    {\r\n        var data = message.data;\r\n        if (typeof data === \"string\") {\r\n            data = JSON.parse(data);\r\n        }\r\n        switch (data.type) {\r\n            case QWebChannelMessageTypes.signal:\r\n                channel.handleSignal(data);\r\n                break;\r\n            case QWebChannelMessageTypes.response:\r\n                channel.handleResponse(data);\r\n                break;\r\n            case QWebChannelMessageTypes.propertyUpdate:\r\n                channel.handlePropertyUpdate(data);\r\n                break;\r\n            default:\r\n                console.error(\"invalid message received:\", message.data);\r\n                break;\r\n        }\r\n    }\r\n\r\n    this.execCallbacks = {};\r\n    this.execId = 0;\r\n    this.exec = function(data, callback)\r\n    {\r\n        if (!callback) {\r\n            // if no callback is given, send directly\r\n            channel.send(data);\r\n            return;\r\n        }\r\n        if (channel.execId === Number.MAX_VALUE) {\r\n            // wrap\r\n            channel.execId = Number.MIN_VALUE;\r\n        }\r\n        if (data.hasOwnProperty(\"id\")) {\r\n            console.error(\"Cannot exec message with property id: \" + JSON.stringify(data));\r\n            return;\r\n        }\r\n        data.id = channel.execId++;\r\n        channel.execCallbacks[data.id] = callback;\r\n        channel.send(data);\r\n    };\r\n\r\n    this.objects = {};\r\n\r\n    this.handleSignal = function(message)\r\n    {\r\n        var object = channel.objects[message.object];\r\n        if (object) {\r\n            object.signalEmitted(message.signal, message.args);\r\n        } else {\r\n            console.warn(\"Unhandled signal: \" + message.object + \"::\" + message.signal);\r\n        }\r\n    }\r\n\r\n    this.handleResponse = function(message)\r\n    {\r\n        if (!message.hasOwnProperty(\"id\")) {\r\n            console.error(\"Invalid response message received: \", JSON.stringify(message));\r\n            return;\r\n        }\r\n        channel.execCallbacks[message.id](message.data);\r\n        delete channel.execCallbacks[message.id];\r\n    }\r\n\r\n    this.handlePropertyUpdate = function(message)\r\n    {\r\n        message.data.forEach(data => {\r\n            var object = channel.objects[data.object];\r\n            if (object) {\r\n                object.propertyUpdate(data.signals, data.properties);\r\n            } else {\r\n                console.warn(\"Unhandled property update: \" + data.object + \"::\" + data.signal);\r\n            }\r\n        });\r\n        channel.exec({type: QWebChannelMessageTypes.idle});\r\n    }\r\n\r\n    this.debug = function(message)\r\n    {\r\n        channel.send({type: QWebChannelMessageTypes.debug, data: message});\r\n    };\r\n\r\n    channel.exec({type: QWebChannelMessageTypes.init}, function(data) {\r\n        for (const objectName of Object.keys(data)) {\r\n            new QObject(objectName, data[objectName], channel);\r\n        }\r\n\r\n        // now unwrap properties, which might reference other registered objects\r\n        for (const objectName of Object.keys(channel.objects)) {\r\n            channel.objects[objectName].unwrapProperties();\r\n        }\r\n\r\n        if (initCallback) {\r\n            initCallback(channel);\r\n        }\r\n        channel.exec({type: QWebChannelMessageTypes.idle});\r\n    });\r\n//   return QWebChannel\r\n};\r\n\r\nfunction QObject(name, data, webChannel)\r\n{\r\n    this.__id__ = name;\r\n    webChannel.objects[name] = this;\r\n\r\n    // List of callbacks that get invoked upon signal emission\r\n    this.__objectSignals__ = {};\r\n\r\n    // Cache of all properties, updated when a notify signal is emitted\r\n    this.__propertyCache__ = {};\r\n\r\n    var object = this;\r\n\r\n    // ----------------------------------------------------------------------\r\n\r\n    this.unwrapQObject = function(response)\r\n    {\r\n        if (response instanceof Array) {\r\n            // support list of objects\r\n            return response.map(qobj => object.unwrapQObject(qobj))\r\n        }\r\n        if (!(response instanceof Object))\r\n            return response;\r\n\r\n        if (!response[\"__QObject*__\"] || response.id === undefined) {\r\n            var jObj = {};\r\n            for (const propName of Object.keys(response)) {\r\n                jObj[propName] = object.unwrapQObject(response[propName]);\r\n            }\r\n            return jObj;\r\n        }\r\n\r\n        var objectId = response.id;\r\n        if (webChannel.objects[objectId])\r\n            return webChannel.objects[objectId];\r\n\r\n        if (!response.data) {\r\n            console.error(\"Cannot unwrap unknown QObject \" + objectId + \" without data.\");\r\n            return;\r\n        }\r\n\r\n        var qObject = new QObject( objectId, response.data, webChannel );\r\n        qObject.destroyed.connect(function() {\r\n            if (webChannel.objects[objectId] === qObject) {\r\n                delete webChannel.objects[objectId];\r\n                // reset the now deleted QObject to an empty {} object\r\n                // just assigning {} though would not have the desired effect, but the\r\n                // below also ensures all external references will see the empty map\r\n                // NOTE: this detour is necessary to workaround QTBUG-40021\r\n                Object.keys(qObject).forEach(name => delete qObject[name]);\r\n            }\r\n        });\r\n        // here we are already initialized, and thus must directly unwrap the properties\r\n        qObject.unwrapProperties();\r\n        return qObject;\r\n    }\r\n\r\n    this.unwrapProperties = function()\r\n    {\r\n        for (const propertyIdx of Object.keys(object.__propertyCache__)) {\r\n            object.__propertyCache__[propertyIdx] = object.unwrapQObject(object.__propertyCache__[propertyIdx]);\r\n        }\r\n    }\r\n\r\n    function addSignal(signalData, isPropertyNotifySignal)\r\n    {\r\n        var signalName = signalData[0];\r\n        var signalIndex = signalData[1];\r\n        object[signalName] = {\r\n            connect: function(callback) {\r\n                if (typeof(callback) !== \"function\") {\r\n                    console.error(\"Bad callback given to connect to signal \" + signalName);\r\n                    return;\r\n                }\r\n\r\n                object.__objectSignals__[signalIndex] = object.__objectSignals__[signalIndex] || [];\r\n                object.__objectSignals__[signalIndex].push(callback);\r\n\r\n                // only required for \"pure\" signals, handled separately for properties in propertyUpdate\r\n                if (isPropertyNotifySignal)\r\n                    return;\r\n\r\n                // also note that we always get notified about the destroyed signal\r\n                if (signalName === \"destroyed\" || signalName === \"destroyed()\" || signalName === \"destroyed(QObject*)\")\r\n                    return;\r\n\r\n                // and otherwise we only need to be connected only once\r\n                if (object.__objectSignals__[signalIndex].length == 1) {\r\n                    webChannel.exec({\r\n                        type: QWebChannelMessageTypes.connectToSignal,\r\n                        object: object.__id__,\r\n                        signal: signalIndex\r\n                    });\r\n                }\r\n            },\r\n            disconnect: function(callback) {\r\n                if (typeof(callback) !== \"function\") {\r\n                    console.error(\"Bad callback given to disconnect from signal \" + signalName);\r\n                    return;\r\n                }\r\n                object.__objectSignals__[signalIndex] = object.__objectSignals__[signalIndex] || [];\r\n                var idx = object.__objectSignals__[signalIndex].indexOf(callback);\r\n                if (idx === -1) {\r\n                    console.error(\"Cannot find connection of signal \" + signalName + \" to \" + callback.name);\r\n                    return;\r\n                }\r\n                object.__objectSignals__[signalIndex].splice(idx, 1);\r\n                if (!isPropertyNotifySignal && object.__objectSignals__[signalIndex].length === 0) {\r\n                    // only required for \"pure\" signals, handled separately for properties in propertyUpdate\r\n                    webChannel.exec({\r\n                        type: QWebChannelMessageTypes.disconnectFromSignal,\r\n                        object: object.__id__,\r\n                        signal: signalIndex\r\n                    });\r\n                }\r\n            }\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Invokes all callbacks for the given signalname. Also works for property notify callbacks.\r\n     */\r\n    function invokeSignalCallbacks(signalName, signalArgs)\r\n    {\r\n        var connections = object.__objectSignals__[signalName];\r\n        if (connections) {\r\n            connections.forEach(function(callback) {\r\n                callback.apply(callback, signalArgs);\r\n            });\r\n        }\r\n    }\r\n\r\n    this.propertyUpdate = function(signals, propertyMap)\r\n    {\r\n        // update property cache\r\n        for (const propertyIndex of Object.keys(propertyMap)) {\r\n            var propertyValue = propertyMap[propertyIndex];\r\n            object.__propertyCache__[propertyIndex] = this.unwrapQObject(propertyValue);\r\n        }\r\n\r\n        for (const signalName of Object.keys(signals)) {\r\n            // Invoke all callbacks, as signalEmitted() does not. This ensures the\r\n            // property cache is updated before the callbacks are invoked.\r\n            invokeSignalCallbacks(signalName, signals[signalName]);\r\n        }\r\n    }\r\n\r\n    this.signalEmitted = function(signalName, signalArgs)\r\n    {\r\n        invokeSignalCallbacks(signalName, this.unwrapQObject(signalArgs));\r\n    }\r\n\r\n    function addMethod(methodData)\r\n    {\r\n        var methodName = methodData[0];\r\n        var methodIdx = methodData[1];\r\n\r\n        // Fully specified methods are invoked by id, others by name for host-side overload resolution\r\n        var invokedMethod = methodName[methodName.length - 1] === ')' ? methodIdx : methodName\r\n\r\n        object[methodName] = function() {\r\n            var args = [];\r\n            var callback;\r\n            var errCallback;\r\n            for (var i = 0; i < arguments.length; ++i) {\r\n                var argument = arguments[i];\r\n                if (typeof argument === \"function\")\r\n                    callback = argument;\r\n                else if (argument instanceof QObject && webChannel.objects[argument.__id__] !== undefined)\r\n                    args.push({\r\n                        \"id\": argument.__id__\r\n                    });\r\n                else\r\n                    args.push(argument);\r\n            }\r\n\r\n            var result;\r\n            // during test, webChannel.exec synchronously calls the callback\r\n            // therefore, the promise must be constucted before calling\r\n            // webChannel.exec to ensure the callback is set up\r\n            if (!callback && (typeof(Promise) === 'function')) {\r\n              result = new Promise(function(resolve, reject) {\r\n                callback = resolve;\r\n                errCallback = reject;\r\n              });\r\n            }\r\n\r\n            webChannel.exec({\r\n                \"type\": QWebChannelMessageTypes.invokeMethod,\r\n                \"object\": object.__id__,\r\n                \"method\": invokedMethod,\r\n                \"args\": args\r\n            }, function(response) {\r\n                if (response !== undefined) {\r\n                    var result = object.unwrapQObject(response);\r\n                    if (callback) {\r\n                        (callback)(result);\r\n                    }\r\n                } else if (errCallback) {\r\n                  (errCallback)();\r\n                }\r\n            });\r\n\r\n            return result;\r\n        };\r\n    }\r\n\r\n    function bindGetterSetter(propertyInfo)\r\n    {\r\n        var propertyIndex = propertyInfo[0];\r\n        var propertyName = propertyInfo[1];\r\n        var notifySignalData = propertyInfo[2];\r\n        // initialize property cache with current value\r\n        // NOTE: if this is an object, it is not directly unwrapped as it might\r\n        // reference other QObject that we do not know yet\r\n        object.__propertyCache__[propertyIndex] = propertyInfo[3];\r\n\r\n        if (notifySignalData) {\r\n            if (notifySignalData[0] === 1) {\r\n                // signal name is optimized away, reconstruct the actual name\r\n                notifySignalData[0] = propertyName + \"Changed\";\r\n            }\r\n            addSignal(notifySignalData, true);\r\n        }\r\n\r\n        Object.defineProperty(object, propertyName, {\r\n            configurable: true,\r\n            get: function () {\r\n                var propertyValue = object.__propertyCache__[propertyIndex];\r\n                if (propertyValue === undefined) {\r\n                    // This shouldn't happen\r\n                    console.warn(\"Undefined value in property cache for property \\\"\" + propertyName + \"\\\" in object \" + object.__id__);\r\n                }\r\n\r\n                return propertyValue;\r\n            },\r\n            set: function(value) {\r\n                if (value === undefined) {\r\n                    console.warn(\"Property setter for \" + propertyName + \" called with undefined value!\");\r\n                    return;\r\n                }\r\n                object.__propertyCache__[propertyIndex] = value;\r\n                var valueToSend = value;\r\n                if (valueToSend instanceof QObject && webChannel.objects[valueToSend.__id__] !== undefined)\r\n                    valueToSend = { \"id\": valueToSend.__id__ };\r\n                webChannel.exec({\r\n                    \"type\": QWebChannelMessageTypes.setProperty,\r\n                    \"object\": object.__id__,\r\n                    \"property\": propertyIndex,\r\n                    \"value\": valueToSend\r\n                });\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    // ----------------------------------------------------------------------\r\n\r\n    data.methods.forEach(addMethod);\r\n\r\n    data.properties.forEach(bindGetterSetter);\r\n\r\n    data.signals.forEach(function(signal) { addSignal(signal, false); });\r\n\r\n    Object.assign(object, data.enums);\r\n}\r\n\r\n// required for use with nodejs\r\n// if (typeof module === 'object') {\r\n//     module.exports = {\r\n//         QWebChannel: QWebChannel\r\n//     };\r\n// }\r\nexport {\r\n    QWebChannel\r\n};"],"mappings":"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"}]}